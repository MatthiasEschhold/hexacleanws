/*
 * Authorization API Version 4
 * see https://auth-nonprod.dvb.corpinter.net/docs/authorization-api-v4.html
 *
 * The version of the OpenAPI document: 1.0.2073
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.novatec.hexacleanws.garage.management.external.service.customer.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Authorizations
 */
@JsonPropertyOrder({
        Authorizations.JSON_PROPERTY_RESULT_COUNT,
        Authorizations.JSON_PROPERTY_AUTHORIZATIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-08-26T11:12:38.074888+02:00[Europe/Berlin]")
public class Authorizations {
    public static final String JSON_PROPERTY_RESULT_COUNT = "resultCount";
    private Integer resultCount;

    public static final String JSON_PROPERTY_AUTHORIZATIONS = "authorizations";
    private List<Authorization> authorizations = null;

    public Authorizations() {
    }

    public Authorizations resultCount(Integer resultCount) {

        this.resultCount = resultCount;
        return this;
    }

    /**
     * The total number of authorizations for the given user and or partner. It can be used for pagination.
     *
     * @return resultCount
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "1", value = "The total number of authorizations for the given user and or partner. It can be used for pagination.")
    @JsonProperty(JSON_PROPERTY_RESULT_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getResultCount() {
        return resultCount;
    }


    @JsonProperty(JSON_PROPERTY_RESULT_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResultCount(Integer resultCount) {
        this.resultCount = resultCount;
    }


    public Authorizations authorizations(List<Authorization> authorizations) {

        this.authorizations = authorizations;
        return this;
    }

    public Authorizations addAuthorizationsItem(Authorization authorizationsItem) {
        if (this.authorizations == null) {
            this.authorizations = new ArrayList<>();
        }
        this.authorizations.add(authorizationsItem);
        return this;
    }

    /**
     * The list of retrieved authorizations. This will be null if no authorizations are retrieved.
     *
     * @return authorizations
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The list of retrieved authorizations. This will be null if no authorizations are retrieved.")
    @JsonProperty(JSON_PROPERTY_AUTHORIZATIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Authorization> getAuthorizations() {
        return authorizations;
    }


    @JsonProperty(JSON_PROPERTY_AUTHORIZATIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAuthorizations(List<Authorization> authorizations) {
        this.authorizations = authorizations;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Authorizations authorizations = (Authorizations) o;
        return Objects.equals(this.resultCount, authorizations.resultCount) &&
                Objects.equals(this.authorizations, authorizations.authorizations);
    }

    @Override
    public int hashCode() {
        return Objects.hash(resultCount, authorizations);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Authorizations {\n");
        sb.append("    resultCount: ").append(toIndentedString(resultCount)).append("\n");
        sb.append("    authorizations: ").append(toIndentedString(authorizations)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

